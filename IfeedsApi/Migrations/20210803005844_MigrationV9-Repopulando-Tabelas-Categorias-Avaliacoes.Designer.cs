// <auto-generated />
using System;
using IfeedsApi.Config.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210803005844_MigrationV9-Repopulando-Tabelas-Categorias-Avaliacoes")]
    partial class MigrationV9RepopulandoTabelasCategoriasAvaliacoes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(4182),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Banheiro"
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5339),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Escada COINF"
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5345),
                            MediaAvaliacao = 3.5m,
                            Titulo = "COINF"
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5347),
                            MediaAvaliacao = 4.5m,
                            Titulo = "GEN"
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5349),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Limpeza"
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5350),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Biblioteca"
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5351),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday"
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5353),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Semana Acadêmica"
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5354),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Ifs Dev Conf"
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5356),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF"
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5357),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes"
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5358),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Refeitório"
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 6,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5360),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Quadra Poliesportiva"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 789, DateTimeKind.Utc).AddTicks(8466),
                            Nome = "IFS-Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(999),
                            Nome = "IFS-Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(1009),
                            Nome = "IFS-Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(1010),
                            Nome = "IFS-Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(1015),
                            Nome = "IFS-Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(1016),
                            Nome = "IFS-Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(1036),
                            Nome = "IFS-Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(1038),
                            Nome = "IFS-Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(1039),
                            Nome = "IFS-Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(1041),
                            Nome = "IFS-Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(1043),
                            Nome = "IFS-Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3914),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3918),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3919),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3920),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3923),
                            Nome = "Laboratórios"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(4288),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(5529),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(5533),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(5534),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(5536),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(5537),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(5538),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(5540),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(5541),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 250, DateTimeKind.Utc).AddTicks(5543),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FormularioAvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("FormularioAvaliacaoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("f54af9b8-9441-4bce-8c99-a0a4894cd326"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(5699),
                            FormularioAvaliacaoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("885bb372-5f8f-437b-930a-e5bb1702d362"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(6977),
                            FormularioAvaliacaoId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("810876d2-6f77-49ed-90d9-5f7cbe1f1e54"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(6982),
                            FormularioAvaliacaoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("44f38606-b69f-4e9c-b05b-2712ab2a89e5"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(6985),
                            FormularioAvaliacaoId = 4,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("7e591aa2-2b27-432e-9914-f4a897c5e6b3"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(6987),
                            FormularioAvaliacaoId = 5,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("c5e7abea-18ef-48d4-985b-76772fe3b4b2"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(6990),
                            FormularioAvaliacaoId = 6,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("bffd52eb-4eef-4ee3-9d4a-995e0b69ffd8"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(7008),
                            FormularioAvaliacaoId = 7,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 2,
                            Codigo = new Guid("b702668b-dee3-4fc9-9da1-c6eb6cbdbe8f"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(7012),
                            FormularioAvaliacaoId = 8,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 5,
                            Codigo = new Guid("4513da67-5e9d-4b47-a9fd-8be1c395f263"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(7014),
                            FormularioAvaliacaoId = 9,
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 8,
                            Codigo = new Guid("ccd10b7b-9d29-44e2-bcc6-683537940773"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(7016),
                            FormularioAvaliacaoId = 10,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 4,
                            Codigo = new Guid("9ad31258-37a1-47ab-b037-2d742fef68f7"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(7019),
                            FormularioAvaliacaoId = 11,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 2,
                            Codigo = new Guid("466512a3-c95b-4270-9869-020243dec607"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(7022),
                            FormularioAvaliacaoId = 13,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 8,
                            Codigo = new Guid("29df9bd6-4672-4d57-a9bd-39b8178906e9"),
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(7025),
                            FormularioAvaliacaoId = 12,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("QuantidadeEstrelas")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("FormulariosAvaliacaos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(2002),
                            Descricao = "Banheiro com problema espelho quebrado",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Banheiro com problema"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3512),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Problema no corrimão"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3517),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Dificuldade com TCC"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3519),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de Melhoria"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3521),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao pessoal da limpeza"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3522),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            QuantidadeEstrelas = 4m,
                            Titulo = "Problemas com WIFI"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3524),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao Techday"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3525),
                            Descricao = "Semana Academica Divertida - Evento top",
                            QuantidadeEstrelas = 4.50m,
                            Titulo = "Elogio ao evento"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3533),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Palestras cansativas na SEMAC"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3534),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Problema com Ar"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3536),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Barulho no lab de redes"
                        },
                        new
                        {
                            Id = 12,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3537),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de bibliográfia"
                        },
                        new
                        {
                            Id = 13,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(3538),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Rasuras no livro"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(7328),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(8282),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(8285),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(8287),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(8289),
                            FeedbackId = 3,
                            Resposta = "Que bom que está gostando, aproveite",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(8290),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 790, DateTimeKind.Utc).AddTicks(8291),
                            FeedbackId = 8,
                            Resposta = "Obrigado pelo seu feedback",
                            Status = true,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 252, DateTimeKind.Utc).AddTicks(585),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 252, DateTimeKind.Utc).AddTicks(2956),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 518, DateTimeKind.Utc).AddTicks(1560),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "$2a$11$KKXVNleMbo9EWIA8IrNTiOZbphw7R0JkCYmhwYlla9491FiJPXgW.",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 40, 768, DateTimeKind.Utc).AddTicks(4744),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "$2a$11$UwtTL3eJZO.Qd2hkj0p5JeBVppP5e/gAtRshp/R066xtPAfSZsl92",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 41, 18, DateTimeKind.Utc).AddTicks(8125),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "$2a$11$JPgyvrnLJo3Mu5liend0o.jJBAcsNkq544o0yiY7NpRH36uIHpQG.",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 41, 269, DateTimeKind.Utc).AddTicks(6160),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "$2a$11$uFVMmWgZggysSix04QBqb.QLoDcOd09P7X31Pq.nc6ugiZELu2Lgq",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 6,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 41, 519, DateTimeKind.Utc).AddTicks(8178),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "$2a$11$kcIyUWXkoXni4.AQ2ck9xeEuo3/vZcCv4okHlKq1oDeTUzR3qsJse",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 7,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 41, 773, DateTimeKind.Utc).AddTicks(4300),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "$2a$11$i8oWix56l8.92ndqdrF1c.AT15NNGxsaZ2WkNsnAFgpm/3jqtxwya",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 4,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 25, DateTimeKind.Utc).AddTicks(4000),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "$2a$11$WARsQXIR1s7d.APsu/VTleZC8/avlB1jzQ0AHlJi36yo0XkjEcdz6",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 2,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 278, DateTimeKind.Utc).AddTicks(7313),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "$2a$11$lHKMvN/8L8VmxinzQBTtpO7n8lEv336ipFNNn2lvOPrhWzVykvOt.",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 4,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 530, DateTimeKind.Utc).AddTicks(7000),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "$2a$11$JtqUg3sc.vGzmfhWaOkXCe29sOydTy0eC.t6gwQitczAPYrd.1wtm",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 8, 3, 0, 58, 42, 789, DateTimeKind.Utc).AddTicks(7124),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "$2a$11$PzxTazjAPuhEQ425MvOsbuwPfSeFfmaDACx6li3Gx/0SSaOl667JG",
                            Status = true
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.FormularioAvaliacao", "FormularioAvaliacao")
                        .WithOne("Feedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.Feedback", "FormularioAvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("FormularioAvaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Usuarios")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Navigation("Feedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
