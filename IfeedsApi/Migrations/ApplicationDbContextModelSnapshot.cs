// <auto-generated />
using System;
using IfeedsApi.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(2159),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Banheiro"
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3443),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Escada COINF"
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3449),
                            MediaAvaliacao = 3.5m,
                            Titulo = "COINF"
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3451),
                            MediaAvaliacao = 4.5m,
                            Titulo = "GEN"
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3452),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Limpeza"
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3454),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Biblioteca"
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3455),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday"
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3456),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Semana Acadêmica"
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3458),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Ifs Dev Conf"
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3459),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF"
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3461),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes"
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3463),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Refeitório"
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 6,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3464),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Quadra Poliesportiva"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(7583),
                            Nome = "IFS-Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9138),
                            Nome = "IFS-Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9294),
                            Nome = "IFS-Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9297),
                            Nome = "IFS-Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9299),
                            Nome = "IFS-Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9300),
                            Nome = "IFS-Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9302),
                            Nome = "IFS-Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9304),
                            Nome = "IFS-Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9328),
                            Nome = "IFS-Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9330),
                            Nome = "IFS-Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(9331),
                            Nome = "IFS-Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1924),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1926),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1928),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1930),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1931),
                            Nome = "Laboratórios"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(4077),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(5697),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(5702),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(5703),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(5705),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(5706),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(5707),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(5708),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(5709),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 366, DateTimeKind.Utc).AddTicks(5711),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FormularioAvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("FormularioAvaliacaoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("9869569c-0e80-4d03-91ae-625f5746706d"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(3928),
                            FormularioAvaliacaoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("fee394bd-308f-4b6f-99d9-958fe1c972eb"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5265),
                            FormularioAvaliacaoId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("21fcd079-cfa0-48a4-b2fa-336bd35525f2"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5273),
                            FormularioAvaliacaoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("db966de6-68da-4188-88b5-cde7ae72d045"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5275),
                            FormularioAvaliacaoId = 4,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("893b5c26-4a9c-4dff-a157-0f40580bbdee"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5277),
                            FormularioAvaliacaoId = 5,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("cb1b92c3-80c7-4b93-9470-8b8f3ad724a0"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5281),
                            FormularioAvaliacaoId = 6,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("085b9abd-4677-468d-b27e-18345be407c9"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5283),
                            FormularioAvaliacaoId = 7,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 8,
                            Codigo = new Guid("df87e857-fab3-4797-8032-7ec7c55ccc23"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5300),
                            FormularioAvaliacaoId = 8,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 8,
                            Codigo = new Guid("135ec232-64b3-4793-9e1e-335909f77aa5"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5305),
                            FormularioAvaliacaoId = 9,
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 10,
                            Codigo = new Guid("8be5c4ff-50f1-43df-81cb-f8046f5df350"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5307),
                            FormularioAvaliacaoId = 10,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 11,
                            Codigo = new Guid("4bd8fadf-7a0b-4424-a124-b15f023f4b93"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5309),
                            FormularioAvaliacaoId = 11,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 6,
                            Codigo = new Guid("e12aaac0-44e5-4995-8dc8-19f5d26135a5"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5312),
                            FormularioAvaliacaoId = 13,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 6,
                            Codigo = new Guid("77133dd7-0530-4d27-8eca-b88acfe73086"),
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5314),
                            FormularioAvaliacaoId = 12,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("QuantidadeEstrelas")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("FormulariosAvaliacaos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(101),
                            Descricao = "Banheiro com problema espelho quebrado",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Banheiro com problema"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1630),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Problema no corrimão"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1635),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Dificuldade com TCC"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1638),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de Melhoria"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1640),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao pessoal da limpeza"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1643),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            QuantidadeEstrelas = 4m,
                            Titulo = "Problemas com WIFI"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1645),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao Techday"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1646),
                            Descricao = "Semana Academica Divertida - Evento top",
                            QuantidadeEstrelas = 4.50m,
                            Titulo = "Elogio ao evento"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1648),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Palestras cansativas na SEMAC"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1656),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Problema com Ar"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1658),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Barulho no lab de redes"
                        },
                        new
                        {
                            Id = 12,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1659),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de bibliográfia"
                        },
                        new
                        {
                            Id = 13,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(1661),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Rasuras no livro"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(5727),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(6756),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(6759),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(6760),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(6762),
                            FeedbackId = 3,
                            Resposta = "Que bom que está gostando, aproveite",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(6763),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 301, DateTimeKind.Utc).AddTicks(6765),
                            FeedbackId = 8,
                            Resposta = "Obrigado pelo seu feedback",
                            Status = true,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 367, DateTimeKind.Utc).AddTicks(8278),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 367, DateTimeKind.Utc).AddTicks(9033),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 573, DateTimeKind.Utc).AddTicks(751),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "$2a$11$kkWAt4G5NPGFqUS/F0oy.uzFKTY5vMI4yrl4gOmDg4551dZ.yzNbe",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 767, DateTimeKind.Utc).AddTicks(584),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "$2a$11$R8dKnQEOiZHfyz53GGjjOeFBqlKnciOKg92.AzZhK4vI78BfhhgPe",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 44, 959, DateTimeKind.Utc).AddTicks(7599),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "$2a$11$/G8QoKwVMs0klKXf75HYyeAjZk0f.x90kRpIdyMPXYzilENJQclSW",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 45, 151, DateTimeKind.Utc).AddTicks(3551),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "$2a$11$IX01Yme.DNK92givzUFd/OvhuZmf9Wrk6yqQ6mrp6k..9Z.2XL5mS",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 6,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 45, 342, DateTimeKind.Utc).AddTicks(5069),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "$2a$11$gMGu3U9rHD4FNERGHVPf7eAZTnd8FY7wo5cjh1lqajT2O7FbLaLYm",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 7,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 45, 535, DateTimeKind.Utc).AddTicks(459),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "$2a$11$VcazKi.R3QSmZst/2cJ3QenLA/D6J2E9Y35h4Si2VmBub.R3gCE9y",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 4,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 45, 728, DateTimeKind.Utc).AddTicks(2617),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "$2a$11$SqoGIi92BOjTVVtdZ9QCMu/N3uwB.24UOaJwvCqR/pUm8m6o4paqS",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 2,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 45, 918, DateTimeKind.Utc).AddTicks(116),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "$2a$11$Tke8v3agQyMHyADukOFZbOweVKblQ3gJ4gyZZROdgXsWafg2xrX5S",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 4,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 108, DateTimeKind.Utc).AddTicks(2802),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "$2a$11$qZmxxUgXvWI5oowICU6jTOE1XhXz7bhZBKKv7l43Nkkcq9Zq9Z64y",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 8, 12, 0, 47, 46, 300, DateTimeKind.Utc).AddTicks(6758),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "$2a$11$QZii17HfUiHWou65oiAiBeJtq3HKlV/4UUi1KvyiABsYUnwFDPi2G",
                            Status = true
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.FormularioAvaliacao", "FormularioAvaliacao")
                        .WithOne("Feedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.Feedback", "FormularioAvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("FormularioAvaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Usuarios")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Navigation("Feedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
