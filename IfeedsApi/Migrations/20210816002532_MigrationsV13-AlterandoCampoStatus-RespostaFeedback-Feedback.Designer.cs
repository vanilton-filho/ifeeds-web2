// <auto-generated />
using System;
using IfeedsApi.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210816002532_MigrationsV13-AlterandoCampoStatus-RespostaFeedback-Feedback")]
    partial class MigrationsV13AlterandoCampoStatusRespostaFeedbackFeedback
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(4503),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Banheiro"
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6707),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Escada COINF"
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6721),
                            MediaAvaliacao = 2.5m,
                            Titulo = "COINF"
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6740),
                            MediaAvaliacao = 3.0m,
                            Titulo = "GEN"
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6743),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Limpeza"
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6745),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Biblioteca"
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6750),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday"
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6752),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Semana Acadêmica"
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6754),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Ifs Dev Conf"
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6757),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF"
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6767),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes"
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6770),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Refeitório"
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 6,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(6773),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Quadra Poliesportiva"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc),
                            Nome = "Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2847),
                            Nome = "Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2862),
                            Nome = "Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2864),
                            Nome = "Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2866),
                            Nome = "Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2870),
                            Nome = "Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2880),
                            Nome = "Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2883),
                            Nome = "Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2885),
                            Nome = "Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2887),
                            Nome = "Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(2890),
                            Nome = "Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(3488),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(3494),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(3496),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(3498),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(3500),
                            Nome = "Laboratórios"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(6621),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(8303),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(8311),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(8313),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(8314),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(8316),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(8317),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(8319),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(8320),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 29, DateTimeKind.Utc).AddTicks(8323),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(5,1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("f6bf96aa-69e6-40e2-9e9c-b6c27938dd75"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 778, DateTimeKind.Utc).AddTicks(7661),
                            Descricao = "Banheiro com problema espelho quebrado",
                            Nota = 3.50m,
                            Status = true,
                            Titulo = "Banheiro com problema",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("ec0acd35-86a0-411d-b72a-d652109a7a2c"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(1988),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            Nota = 3m,
                            Status = true,
                            Titulo = "Problema no corrimão",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("86c73813-9fee-4d15-b123-fe0a5568ad99"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2091),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            Nota = 2.50m,
                            Status = true,
                            Titulo = "Dificuldade com TCC",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("b0cb5078-3133-4c6b-bf68-8853a83732e4"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2098),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            Nota = 3m,
                            Status = true,
                            Titulo = "Sugestão de Melhoria",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("9e5ee5d6-af59-43b1-af73-d1ad6e0bdb85"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2103),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            Nota = 5m,
                            Status = true,
                            Titulo = "Elogio ao pessoal da limpeza",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("dd331ec8-d42d-4399-a6d8-95b236c1d3fa"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2107),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            Nota = 4m,
                            Status = true,
                            Titulo = "Problemas com WIFI",
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("6c267bd4-764e-43e1-bb46-f3ac42e8421e"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2110),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            Nota = 5m,
                            Status = false,
                            Titulo = "Elogio ao Techday",
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 8,
                            Codigo = new Guid("637f04eb-2c38-41c0-95ea-428673e1bb3c"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2114),
                            Descricao = "Semana Academica Divertida - Evento top",
                            Nota = 4.50m,
                            Status = true,
                            Titulo = "Elogio ao evento",
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 8,
                            Codigo = new Guid("295b5800-52d6-4289-a8e0-c47daccfde5f"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2118),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            Nota = 2.50m,
                            Status = false,
                            Titulo = "Palestras cansativas na SEMAC",
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 10,
                            Codigo = new Guid("ede8f07d-2b1c-452d-88d0-b23418ce42f5"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2122),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            Nota = 3.50m,
                            Status = false,
                            Titulo = "Problema com Ar",
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 11,
                            Codigo = new Guid("897e5744-622f-4037-ac80-fd0187330ed0"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2131),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            Nota = 2.50m,
                            Status = false,
                            Titulo = "Barulho no lab de redes",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 6,
                            Codigo = new Guid("0017baeb-2f2e-4bfe-8c54-4e4e8dbaa96f"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2135),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            Nota = 3m,
                            Status = false,
                            Titulo = "Sugestão de bibliográfia",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 6,
                            Codigo = new Guid("41394c21-84e2-4bde-a388-17ece2dcb8bd"),
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(2141),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            Nota = 3m,
                            Status = false,
                            Titulo = "Rasuras no livro",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(3291),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(5459),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(5468),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(5472),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(5474),
                            FeedbackId = 3,
                            Resposta = "Que bom que está gostando, aproveite",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(5477),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 779, DateTimeKind.Utc).AddTicks(5479),
                            FeedbackId = 8,
                            Resposta = "Obrigado pelo seu feedback",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 31, DateTimeKind.Utc).AddTicks(9443),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 32, DateTimeKind.Utc).AddTicks(621),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 318, DateTimeKind.Utc).AddTicks(8289),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "$2a$11$QiISyFmX.oid/yBmAEvBPeFg/Oas/5097kdQZ9F6PFaZ0JDSk/K.y",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 581, DateTimeKind.Utc).AddTicks(8013),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "$2a$11$fwEKMnenadqRgA/aVgqn3uvGOEsaLjs/PwVB2B5a0GkB1QjjE6y0K",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 28, 849, DateTimeKind.Utc).AddTicks(9637),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "$2a$11$I/4AG6UMEzfGBa58GKR1KOSt9IkUq7dWg/WvAch.FFIP5i/eZiRDO",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 29, 114, DateTimeKind.Utc).AddTicks(536),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "$2a$11$Ci5yKc1t6ixPQ8kLUUzp2uCIVj.wrKX0Lg96./QuNbVUVGBKYLRai",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 6,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 29, 381, DateTimeKind.Utc).AddTicks(4430),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "$2a$11$RgCfrpI3525Nvcymz7mXX.uS..CDBAuzTScKAfrn.Ks5vlIkukAYa",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 7,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 29, 669, DateTimeKind.Utc).AddTicks(1596),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "$2a$11$q98c4w7TFX8N6zb9Itaq1OuwiHZCyy9WBk895N0D78LSHh87jX5W6",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 4,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 29, 956, DateTimeKind.Utc).AddTicks(7965),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "$2a$11$Z4KSHdBg0Ozm0KWLChiaKeTRUC99bQw0gAIjMd4jx4AaxP.vWGF7C",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 2,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 215, DateTimeKind.Utc).AddTicks(4317),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "$2a$11$s/2s8x1B7x4SReLVUmlZGuKC8LV5cA0WvVAClGa/EuzZ0/G/TyfbO",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 4,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 478, DateTimeKind.Utc).AddTicks(1308),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "$2a$11$E2EDnEIUqdU3bYQNKBqxIeUsGgXJ0bdP62dW2HTG3PCBU5Nqq0kF6",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 8, 16, 0, 25, 30, 777, DateTimeKind.Utc).AddTicks(6586),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "$2a$11$UfTjnH451zAid2cMWxvgJOHFg7GD9CKJpBA2pw7ielyf/u/De525m",
                            Status = true
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Usuarios")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
