// <auto-generated />
using System;
using IfeedsApi.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210728190231_MigrationV7-AddRelacionamento-UsuarioCampus")]
    partial class MigrationV7AddRelacionamentoUsuarioCampus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(5414),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Banheiro Com Problema"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6383),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Corrimão da Escada da COINF Descascando"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6386),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Demora para Aprovar Máteria de TCC 1"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6388),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Melhorias no Processo de Atendimento"
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6389),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Pessoal da Limpeza Top"
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6391),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Problemas com o Wifi do Campus"
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6392),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday Top"
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6394),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Semana Academica Divertida"
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6395),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Semana Academica Algumas Palestras Massantes"
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6397),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF precisão limpar o filtro do Ar"
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6398),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes com acustica prejudicada"
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6400),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Nenhum Livro de Loiane Groner"
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6402),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Livro de Cálculo com página rasurada"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(1164),
                            Nome = "IFS-Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2719),
                            Nome = "IFS-Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2723),
                            Nome = "IFS-Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2725),
                            Nome = "IFS-Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2726),
                            Nome = "IFS-Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2729),
                            Nome = "IFS-Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2773),
                            Nome = "IFS-Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2775),
                            Nome = "IFS-Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2776),
                            Nome = "IFS-Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2777),
                            Nome = "IFS-Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(2786),
                            Nome = "IFS-Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(5167),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(5170),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(5171),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(5173),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(5174),
                            Nome = "Laboratórios"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(5175),
                            Nome = "Biblioteca"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(6071),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(7607),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(7613),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(7615),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(7619),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(7621),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(7622),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(7623),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(7627),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 802, DateTimeKind.Utc).AddTicks(7629),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FormularioAvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("FormularioAvaliacaoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("896e137c-656d-4eed-b433-cebb3e2a295d"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(6772),
                            FormularioAvaliacaoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("e960a809-0b6a-45e3-932d-2fdb29a68883"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8145),
                            FormularioAvaliacaoId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("4c4e7dab-cddc-45a3-8bd4-f280097fb2ea"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8150),
                            FormularioAvaliacaoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("6ae9ea9c-adf8-401e-9208-a464337a9afe"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8152),
                            FormularioAvaliacaoId = 4,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("d540c216-9397-4c9a-9476-9b33d29f70c8"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8154),
                            FormularioAvaliacaoId = 5,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("a1e2e9be-e6a8-4fda-bb1c-82409831ea8e"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8156),
                            FormularioAvaliacaoId = 6,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("81162864-e685-43e6-934b-adcedaed3b87"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8158),
                            FormularioAvaliacaoId = 7,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 2,
                            Codigo = new Guid("fb33504d-2d98-4723-ae7e-5bd80b0d3278"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8176),
                            FormularioAvaliacaoId = 8,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 5,
                            Codigo = new Guid("7cc6f7ec-3b13-4e59-90a1-301de0370b5c"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8179),
                            FormularioAvaliacaoId = 9,
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 8,
                            Codigo = new Guid("c08ef761-ccb6-4ce2-9c07-5a1f56e0b5ba"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8181),
                            FormularioAvaliacaoId = 10,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 4,
                            Codigo = new Guid("ce5a6638-ca7f-4d49-a569-505cd4f59f14"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8183),
                            FormularioAvaliacaoId = 11,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 2,
                            Codigo = new Guid("e067812d-12a8-4f5a-89f7-70705d0ac129"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8185),
                            FormularioAvaliacaoId = 13,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 8,
                            Codigo = new Guid("6d63730d-8fa1-43d1-be54-e38087d5d6cd"),
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8188),
                            FormularioAvaliacaoId = 12,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("QuantidadeEstrelas")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("FormulariosAvaliacaos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(3560),
                            Descricao = "Banheiro com problema espelho quebrado",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Banheiro com problema"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4903),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Problema no corrimão"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4907),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Dificuldade com TCC"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4909),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de Melhoria"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4912),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao pessoal da limpeza"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4914),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            QuantidadeEstrelas = 4m,
                            Titulo = "Problemas com WIFI"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4916),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao Techday"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4917),
                            Descricao = "Semana Academica Divertida - Evento top",
                            QuantidadeEstrelas = 4.50m,
                            Titulo = "Elogio ao evento"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4924),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Palestras cansativas na SEMAC"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4926),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Problema com Ar"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4927),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Barulho no lab de redes"
                        },
                        new
                        {
                            Id = 12,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4929),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de bibliográfia"
                        },
                        new
                        {
                            Id = 13,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(4930),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Rasuras no livro"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(8795),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(9952),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(9956),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(9957),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(9959),
                            FeedbackId = 3,
                            Resposta = "Que bom que está gostando, aproveite",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(9960),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(9961),
                            FeedbackId = 8,
                            Resposta = "Obrigado pelo seu feedback",
                            Status = true,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 804, DateTimeKind.Utc).AddTicks(4437),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 27, 804, DateTimeKind.Utc).AddTicks(5645),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 28, 78, DateTimeKind.Utc).AddTicks(1783),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "$2a$11$zqE0OnZ5D.2lPZ5Sf7vlXO2HYE1hAZLRw7KjtFrjdoXbFeMVcOm/a",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 28, 327, DateTimeKind.Utc).AddTicks(8818),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "$2a$11$PiAH5KafzkjLygI0wPwxLeV93YRyxMuSUVKYOHaT82UoJn9o9v7IC",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 28, 586, DateTimeKind.Utc).AddTicks(5213),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "$2a$11$aoNQDdmMWsEgMVa5jJH4reoW7HufK7xhJq45.xRV/m0qBKQH/A8D.",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 28, 837, DateTimeKind.Utc).AddTicks(5166),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "$2a$11$zNyVXfRg3gstVdqBurNglOVah3nYlH481KBxQNkSGcH769smtKKri",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 6,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 29, 89, DateTimeKind.Utc).AddTicks(6855),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "$2a$11$aJbID5oolELyWlv0LXn4Tujtm1CgfEam7noRUzd5fAZ6gx422LuEW",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 7,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 29, 344, DateTimeKind.Utc).AddTicks(5792),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "$2a$11$smv0odvV7bRkP0g5Bq.H8eJtnMYLTYS0LGLrQr7zNGm1d68fE/iOW",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 4,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 29, 591, DateTimeKind.Utc).AddTicks(193),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "$2a$11$zHStYLnRpNL.59PZp7NH..kp2JNJQqH0YPaWQTweRmA56Fbk4Qive",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 2,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 29, 839, DateTimeKind.Utc).AddTicks(7614),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "$2a$11$tJodLgpVS0Whdk0exV2qvO.aRNu5.kJX8pJ0/cwE.eYRtNdw6gYNS",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 4,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 94, DateTimeKind.Utc).AddTicks(8214),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "$2a$11$4DYX4J6HdhFsqGCKZG1jaOMsI9DliLJh4a7a.fhthhs/VNP/JsJmu",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 7, 28, 19, 2, 30, 344, DateTimeKind.Utc).AddTicks(249),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "$2a$11$MqCwe6JTkMYGyptI.VEqC.SKYi8/dqzMOu/vMP4ulYr.7V479A6s2",
                            Status = true
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.FormularioAvaliacao", "FormularioAvaliacao")
                        .WithOne("Feedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.Feedback", "FormularioAvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("FormularioAvaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Usuarios")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Navigation("Feedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
