// <auto-generated />
using System;
using IfeedsApi.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210821190938_MigrationsV14-AlterandoBug-RespostasFeedback-Correcao-MassaDados")]
    partial class MigrationsV14AlterandoBugRespostasFeedbackCorrecaoMassaDados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(3047),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Banheiro"
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4607),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Escada COINF"
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4612),
                            MediaAvaliacao = 2.5m,
                            Titulo = "COINF"
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4624),
                            MediaAvaliacao = 3.0m,
                            Titulo = "GEN"
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4626),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Limpeza"
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4627),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Biblioteca"
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4629),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday"
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4630),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Semana Acadêmica"
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4631),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Ifs Dev Conf"
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4633),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF"
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4634),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes"
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4636),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Refeitório"
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 6,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(4638),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Quadra Poliesportiva"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(336),
                            Nome = "Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(1955),
                            Nome = "Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(1960),
                            Nome = "Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(1962),
                            Nome = "Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(1963),
                            Nome = "Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(1965),
                            Nome = "Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2042),
                            Nome = "Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2044),
                            Nome = "Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2045),
                            Nome = "Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2134),
                            Nome = "Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2136),
                            Nome = "Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2511),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2514),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2515),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2517),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(2518),
                            Nome = "Laboratórios"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(190),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(1950),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(1957),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(1959),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(1961),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(1963),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(1965),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(1967),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(1968),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 895, DateTimeKind.Utc).AddTicks(1970),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(5,1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("43db16c9-0278-4491-a1b1-c99882baf96c"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(5158),
                            Descricao = "Banheiro com problema espelho quebrado",
                            Nota = 3.50m,
                            Status = true,
                            Titulo = "Banheiro com problema",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("c882dc0a-2964-4901-8edf-7a0dd11b6b76"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6500),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            Nota = 3m,
                            Status = true,
                            Titulo = "Problema no corrimão",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("502b3492-7a97-44d5-ac3d-49579db3c19f"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6540),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            Nota = 2.50m,
                            Status = true,
                            Titulo = "Dificuldade com TCC",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("bdb24c83-3247-4e18-b428-91914ca5a0af"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6543),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            Nota = 3m,
                            Status = true,
                            Titulo = "Sugestão de Melhoria",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("697c7ffc-f0c2-4367-8950-c22458c45821"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6545),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            Nota = 5m,
                            Status = true,
                            Titulo = "Elogio ao pessoal da limpeza",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("c3be5695-c118-4c05-a1a5-c1c5eb06c380"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6548),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            Nota = 4m,
                            Status = true,
                            Titulo = "Problemas com WIFI",
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("605ab663-b0b9-4c44-ac02-6f8554e79c36"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6550),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            Nota = 5m,
                            Status = false,
                            Titulo = "Elogio ao Techday",
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 8,
                            Codigo = new Guid("dd99548f-abac-4d82-8927-ed18ee9b9341"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6552),
                            Descricao = "Semana Academica Divertida - Evento top",
                            Nota = 4.50m,
                            Status = true,
                            Titulo = "Elogio ao evento",
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 8,
                            Codigo = new Guid("d4782de6-db14-4925-ab48-8fb902664952"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6554),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            Nota = 2.50m,
                            Status = false,
                            Titulo = "Palestras cansativas na SEMAC",
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 10,
                            Codigo = new Guid("5bce6a8e-e832-464a-987a-c1498a89656f"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6557),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            Nota = 3.50m,
                            Status = false,
                            Titulo = "Problema com Ar",
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 11,
                            Codigo = new Guid("1f762a86-adf6-40bb-a98f-d5fb017f1035"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6562),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            Nota = 2.50m,
                            Status = false,
                            Titulo = "Barulho no lab de redes",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 6,
                            Codigo = new Guid("8e9e9ba2-8778-45ce-909e-c625ab2b435d"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6565),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            Nota = 3m,
                            Status = false,
                            Titulo = "Sugestão de bibliográfia",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 6,
                            Codigo = new Guid("914181f4-7fa7-4dcd-9757-563362a6e7eb"),
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6568),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            Nota = 3m,
                            Status = false,
                            Titulo = "Rasuras no livro",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(6842),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(7975),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(7978),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(7979),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(7981),
                            FeedbackId = 3,
                            Resposta = "Obrigado pelo seu feedback, iremos resolver",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(7982),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 720, DateTimeKind.Utc).AddTicks(7984),
                            FeedbackId = 8,
                            Resposta = "Que bom que está gostando, aproveite",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 897, DateTimeKind.Utc).AddTicks(2013),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 33, 897, DateTimeKind.Utc).AddTicks(3215),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 34, 178, DateTimeKind.Utc).AddTicks(5724),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "$2a$11$exHhaQp6H62MYuzM23ZcdufmPtj8j7cKuiLhMth9ri4.pdcaOgiPq",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 34, 502, DateTimeKind.Utc).AddTicks(6895),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "$2a$11$EQEoEKbR6pzwT9uYYG3maugfvbIHNTDICnRagnP/npDdDJqo6faS.",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 34, 799, DateTimeKind.Utc).AddTicks(5537),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "$2a$11$nODz9wYjzOodmsjDSDMm3eqSYnNNjure99FE83DNP9mTxLA4q/OqW",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 35, 54, DateTimeKind.Utc).AddTicks(9308),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "$2a$11$I6WGsU2iuI0io4ERLNT1tuAgB5xUO0q08wKkcvjDqd252RS1vrEJC",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 6,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 35, 387, DateTimeKind.Utc).AddTicks(9859),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "$2a$11$gmnCI.eSi5bZb8FRZjtQ5OLvmqG/y9zeAg32jWUQXaSZ8jCvmxtI6",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 7,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 35, 671, DateTimeKind.Utc).AddTicks(9122),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "$2a$11$L9E2XaXPxaOmWLFm3B7unOXkZSNs6Lcd3urx7U1q29J7lnntmbDE.",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 4,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 35, 933, DateTimeKind.Utc).AddTicks(2961),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "$2a$11$F.6U4ddLFI5oh.zODaBxveq7iqsaRrKFIMOf0Fit/42sEBGCHRhC2",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 2,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 195, DateTimeKind.Utc).AddTicks(8625),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "$2a$11$DuJNOnOjExSmmmAYKFE/DueSKcBfnmlTuwsqznrfbk1/ZPbi3J04y",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 4,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 454, DateTimeKind.Utc).AddTicks(2171),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "$2a$11$Wi5l5AR22JWsbca0XyW/.OqpvnitwkhlS8Fhx6x2CA0NY18uld6ly",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 8, 21, 19, 9, 36, 719, DateTimeKind.Utc).AddTicks(9325),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "$2a$11$IAvJLY4g9lqIe/0iRhh8BOhJXilY9QeUTprUImsfIJI1DWaJSdaX6",
                            Status = true
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Usuarios")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
