// <auto-generated />
using System;
using IfeedsApi.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210814010946_MigrationsV12-Resolvendo-Bug-Avaliacao")]
    partial class MigrationsV12ResolvendoBugAvaliacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(6448),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Banheiro"
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7563),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Escada COINF"
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7568),
                            MediaAvaliacao = 2.5m,
                            Titulo = "COINF"
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7575),
                            MediaAvaliacao = 3.0m,
                            Titulo = "GEN"
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7577),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Limpeza"
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7578),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Biblioteca"
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7580),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday"
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7581),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Semana Acadêmica"
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7582),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Ifs Dev Conf"
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7606),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF"
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7608),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes"
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7609),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Refeitório"
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 6,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(7610),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Quadra Poliesportiva"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(4193),
                            Nome = "IFS-Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5702),
                            Nome = "IFS-Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5707),
                            Nome = "IFS-Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5709),
                            Nome = "IFS-Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5710),
                            Nome = "IFS-Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5711),
                            Nome = "IFS-Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5721),
                            Nome = "IFS-Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5723),
                            Nome = "IFS-Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5724),
                            Nome = "IFS-Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5725),
                            Nome = "IFS-Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5726),
                            Nome = "IFS-Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5972),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5974),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5975),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5976),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(5977),
                            Nome = "Laboratórios"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(747),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(1713),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(1717),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(1718),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(1719),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(1721),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(1724),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(1725),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(1727),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 306, DateTimeKind.Utc).AddTicks(1728),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("541d42e9-41bd-4173-8c1b-6c6d18cec9ba"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(8004),
                            Descricao = "Banheiro com problema espelho quebrado",
                            Nota = 3.50m,
                            Titulo = "Banheiro com problema",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("b850d98a-3825-4e72-8a87-a17aa37887aa"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(652),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            Nota = 3m,
                            Titulo = "Problema no corrimão",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("de01982c-3256-4cad-ba57-cd6a7e9d1253"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(709),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            Nota = 2.50m,
                            Titulo = "Dificuldade com TCC",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("67d68912-3f64-45be-9913-4d1603c7390d"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(714),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            Nota = 3m,
                            Titulo = "Sugestão de Melhoria",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("c5e12b34-9a6c-47fb-aa79-82b34090d416"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(717),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            Nota = 5m,
                            Titulo = "Elogio ao pessoal da limpeza",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("b9a9dcf5-9a9a-407e-86f3-6d465b830199"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(720),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            Nota = 4m,
                            Titulo = "Problemas com WIFI",
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("6276ccc7-8eb0-4839-bfc1-78ee36eab5ae"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(722),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            Nota = 5m,
                            Titulo = "Elogio ao Techday",
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 8,
                            Codigo = new Guid("9fb87538-113d-4302-9944-f8785fd5bc41"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(724),
                            Descricao = "Semana Academica Divertida - Evento top",
                            Nota = 4.50m,
                            Titulo = "Elogio ao evento",
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 8,
                            Codigo = new Guid("4aca2b8a-88fa-46b8-9ac2-d6c462f29bdf"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(739),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            Nota = 2.50m,
                            Titulo = "Palestras cansativas na SEMAC",
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 10,
                            Codigo = new Guid("fa691280-3308-4641-bcb8-919d1daf9c17"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(742),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            Nota = 3.50m,
                            Titulo = "Problema com Ar",
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 11,
                            Codigo = new Guid("9aa2b70a-4201-4bd7-ac2f-437250719a81"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(745),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            Nota = 2.50m,
                            Titulo = "Barulho no lab de redes",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 6,
                            Codigo = new Guid("c5222ff7-9720-4241-a729-597630b0fd7c"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(748),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            Nota = 3m,
                            Titulo = "Sugestão de bibliográfia",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 6,
                            Codigo = new Guid("c3c6c0e4-a407-4962-96b0-9ceca82c6d8e"),
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(750),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            Nota = 3m,
                            Titulo = "Rasuras no livro",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(1382),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(3066),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(3072),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(3074),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(3076),
                            FeedbackId = 3,
                            Resposta = "Que bom que está gostando, aproveite",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(3077),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 392, DateTimeKind.Utc).AddTicks(3079),
                            FeedbackId = 8,
                            Resposta = "Obrigado pelo seu feedback",
                            Status = true,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 307, DateTimeKind.Utc).AddTicks(4013),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 307, DateTimeKind.Utc).AddTicks(4777),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 520, DateTimeKind.Utc).AddTicks(9450),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "$2a$11$zUYKTUphO/nN6hQScZ5SiuVhiteV7vA9DgUBOahHk3Saf.1gzOTaO",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 726, DateTimeKind.Utc).AddTicks(8948),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "$2a$11$hQkqhiIYV3sZ6i.25.d9.OqbIQIqm/PkphcKDdux/1mqXbcNM0xD6",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 43, 929, DateTimeKind.Utc).AddTicks(6263),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "$2a$11$smw0O6rXDyzHDE6FTAs3ienQkOt4YPuIc9r9GBhfJS14/J.a34VCG",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 44, 137, DateTimeKind.Utc).AddTicks(9138),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "$2a$11$0C4NgaUU2ZUu.urXfMwa7.TVDOecmHHaWtDowP.g8VRjYdMOW4dGm",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 6,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 44, 349, DateTimeKind.Utc).AddTicks(51),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "$2a$11$xL/39YDzbx49B4taP7XTwu/F7Pa1Wi0tCTFXRcEAKpB2joF4p4gMO",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 7,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 44, 556, DateTimeKind.Utc).AddTicks(6997),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "$2a$11$PSZIopEcwilBrbNuNqlYt.l/bilDtDALvLbMIRbtlZ5pyj.ofwDnS",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 4,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 44, 770, DateTimeKind.Utc).AddTicks(824),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "$2a$11$F4Py0PGPkkzFbJHteTeqGeyPrOU3fTngbeF1hIRIyPYhN8xjH8iBi",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 2,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 44, 981, DateTimeKind.Utc).AddTicks(8606),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "$2a$11$NpY/sE8G/Rj3n.HngeZDlO9ZoGYAJMm49Utbkj9n9r7r6n02n78Ly",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 4,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 187, DateTimeKind.Utc).AddTicks(5350),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "$2a$11$X0bQ/Lu7UnHcG1VaH7kipe8KHnEMTeHi7.iAjglgUM/T7QZWgTmvW",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 8, 14, 1, 9, 45, 391, DateTimeKind.Utc).AddTicks(3051),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "$2a$11$iB/ti7lsi1igUMPAPJcwSOVmLPvCS5wMjV64IIIP7DDKL/ZydNCT2",
                            Status = true
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Usuarios")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
