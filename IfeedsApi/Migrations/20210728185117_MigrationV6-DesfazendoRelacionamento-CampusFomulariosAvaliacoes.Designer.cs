// <auto-generated />
using System;
using IfeedsApi.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210728185117_MigrationV6-DesfazendoRelacionamento-CampusFomulariosAvaliacoes")]
    partial class MigrationV6DesfazendoRelacionamentoCampusFomulariosAvaliacoes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(5471),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Banheiro Com Problema"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7412),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Corrimão da Escada da COINF Descascando"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7418),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Demora para Aprovar Máteria de TCC 1"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7420),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Melhorias no Processo de Atendimento"
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7422),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Pessoal da Limpeza Top"
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7424),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Problemas com o Wifi do Campus"
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7426),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday Top"
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7427),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Semana Academica Divertida"
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7429),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Semana Academica Algumas Palestras Massantes"
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7431),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF precisão limpar o filtro do Ar"
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7433),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes com acustica prejudicada"
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7435),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Nenhum Livro de Loiane Groner"
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7436),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Livro de Cálculo com página rasurada"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(4060),
                            Nome = "IFS-Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5799),
                            Nome = "IFS-Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5804),
                            Nome = "IFS-Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5806),
                            Nome = "IFS-Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5807),
                            Nome = "IFS-Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5809),
                            Nome = "IFS-Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5811),
                            Nome = "IFS-Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5812),
                            Nome = "IFS-Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5814),
                            Nome = "IFS-Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5816),
                            Nome = "IFS-Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(5817),
                            Nome = "IFS-Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(3418),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(3721),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(3733),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(3736),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(3738),
                            Nome = "Laboratórios"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(3740),
                            Nome = "Biblioteca"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(1296),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(2747),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(2754),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(2756),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(2758),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(2760),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(2761),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(2762),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(2764),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 289, DateTimeKind.Utc).AddTicks(2766),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FormularioAvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("FormularioAvaliacaoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("42b33f8c-f8e9-48fc-b355-bc613782b7dc"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(7872),
                            FormularioAvaliacaoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("b7cd8ecc-a243-4ac9-83be-56e9d31dde63"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9049),
                            FormularioAvaliacaoId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("be77012c-79c8-43aa-8d6b-5794b74ed493"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9054),
                            FormularioAvaliacaoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("03d06982-37ba-4a33-a794-f67b6a274191"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9057),
                            FormularioAvaliacaoId = 4,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("420f436a-3365-4846-bc92-620d61250694"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9075),
                            FormularioAvaliacaoId = 5,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("90e63ca5-c3cc-41c2-9afc-93e637350589"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9078),
                            FormularioAvaliacaoId = 6,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("c54114f1-11d5-4dd3-9a74-53e65892fde7"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9081),
                            FormularioAvaliacaoId = 7,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 2,
                            Codigo = new Guid("76951a85-050a-4581-8e8f-c8c48579f84e"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9084),
                            FormularioAvaliacaoId = 8,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 5,
                            Codigo = new Guid("d005785f-3a79-426e-9707-3a4a23948361"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9086),
                            FormularioAvaliacaoId = 9,
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 8,
                            Codigo = new Guid("b3e9f92f-1188-4a6a-af19-75868d51829c"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9088),
                            FormularioAvaliacaoId = 10,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 4,
                            Codigo = new Guid("aa8e648c-c6e1-45ce-a8a4-64917b31eeb5"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9091),
                            FormularioAvaliacaoId = 11,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 2,
                            Codigo = new Guid("039cb1ab-3b5e-43ed-b448-d92972a50d8a"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9093),
                            FormularioAvaliacaoId = 13,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 8,
                            Codigo = new Guid("eafb4c3c-d9db-45ae-ac31-e0fd5e286735"),
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9099),
                            FormularioAvaliacaoId = 12,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("QuantidadeEstrelas")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("FormulariosAvaliacaos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(266),
                            Descricao = "Banheiro com problema espelho quebrado",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Banheiro com problema"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2724),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Problema no corrimão"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2737),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Dificuldade com TCC"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2740),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de Melhoria"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2742),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao pessoal da limpeza"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2744),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            QuantidadeEstrelas = 4m,
                            Titulo = "Problemas com WIFI"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2746),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao Techday"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2748),
                            Descricao = "Semana Academica Divertida - Evento top",
                            QuantidadeEstrelas = 4.50m,
                            Titulo = "Elogio ao evento"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2766),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Palestras cansativas na SEMAC"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2768),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Problema com Ar"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2769),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Barulho no lab de redes"
                        },
                        new
                        {
                            Id = 12,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2771),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de bibliográfia"
                        },
                        new
                        {
                            Id = 13,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(2773),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Rasuras no livro"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 179, DateTimeKind.Utc).AddTicks(9391),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 180, DateTimeKind.Utc).AddTicks(1055),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 180, DateTimeKind.Utc).AddTicks(1059),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 180, DateTimeKind.Utc).AddTicks(1061),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 180, DateTimeKind.Utc).AddTicks(1063),
                            FeedbackId = 3,
                            Resposta = "Que bom que está gostando, aproveite",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 180, DateTimeKind.Utc).AddTicks(1064),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 180, DateTimeKind.Utc).AddTicks(1066),
                            FeedbackId = 8,
                            Resposta = "Obrigado pelo seu feedback",
                            Status = true,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 292, DateTimeKind.Utc).AddTicks(643),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 292, DateTimeKind.Utc).AddTicks(1813),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 621, DateTimeKind.Utc).AddTicks(2658),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "$2a$11$c1m0NDW3yg5XMuCvaKBNh.SG98eLdsyPrkeOsuDKRQ76KiHlPhhkG",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 13, 904, DateTimeKind.Utc).AddTicks(4563),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "$2a$11$G9VoCZUF9kzWBjwFXkw51.k0poWKK6ZQO1f9Mo4FF0MJAAFKosNe6",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 14, 183, DateTimeKind.Utc).AddTicks(4474),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "$2a$11$DShakH2y1vZ/oYSbBzUSPuZuMajR1Nd5/PGDn3OvIMk1z18ng8Wiq",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 14, 480, DateTimeKind.Utc).AddTicks(5962),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "$2a$11$P6ANiaq6pqz58HlbgllGzeTswTmNoCgT7XMzJ7vGDs7oMutnNu7bO",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 14, 755, DateTimeKind.Utc).AddTicks(230),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "$2a$11$3h.beHuJbz0IZOWHdIVQjulwpML9K.P4ADCwDzII/bkLqZigF79Pq",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 15, 54, DateTimeKind.Utc).AddTicks(6159),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "$2a$11$kLUuWVGxVxOIuR3fY3W5WOwAsKDPcqdoh55WEaby/x/cgEQwwIHLm",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 15, 336, DateTimeKind.Utc).AddTicks(9136),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "$2a$11$DVpQrTsRekdkwgtihnkCHelMgWtaiR.UXCR.1u6WV9gdp5WXDozBa",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 15, 616, DateTimeKind.Utc).AddTicks(4402),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "$2a$11$heVN6qXlIkWYxRB7IbtOGOaVlHA6.vcBNmVPuwBWyHf9Q3Xh.Gf8q",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 15, 899, DateTimeKind.Utc).AddTicks(4274),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "$2a$11$OTK82CBhvegqfoPcJRxfEe2U0ukgicy8/YmLiqYk4D2szbMGLLTZq",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 7, 28, 18, 51, 16, 178, DateTimeKind.Utc).AddTicks(2375),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "$2a$11$MP81gJUbiYMmca68cfeh2uN0v3w3bbDoqoIdsEWK96lBUNPvVmM2K",
                            Status = true
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.FormularioAvaliacao", "FormularioAvaliacao")
                        .WithOne("Feedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.Feedback", "FormularioAvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("FormularioAvaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Navigation("Feedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
