// <auto-generated />
using System;
using IfeedsApi.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210724193738_MigrationV4-AddCampos-Status-Titulo")]
    partial class MigrationV4AddCamposStatusTitulo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("CampusFormularioAvaliacao", b =>
                {
                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("FormulariosAvaliacoesId")
                        .HasColumnType("int");

                    b.HasKey("CampusId", "FormulariosAvaliacoesId");

                    b.HasIndex("FormulariosAvaliacoesId");

                    b.ToTable("CampusFormularioAvaliacao");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            FormulariosAvaliacoesId = 1
                        },
                        new
                        {
                            CampusId = 2,
                            FormulariosAvaliacoesId = 2
                        },
                        new
                        {
                            CampusId = 3,
                            FormulariosAvaliacoesId = 4
                        },
                        new
                        {
                            CampusId = 4,
                            FormulariosAvaliacoesId = 3
                        },
                        new
                        {
                            CampusId = 5,
                            FormulariosAvaliacoesId = 5
                        },
                        new
                        {
                            CampusId = 6,
                            FormulariosAvaliacoesId = 7
                        },
                        new
                        {
                            CampusId = 7,
                            FormulariosAvaliacoesId = 6
                        },
                        new
                        {
                            CampusId = 8,
                            FormulariosAvaliacoesId = 8
                        },
                        new
                        {
                            CampusId = 9,
                            FormulariosAvaliacoesId = 10
                        },
                        new
                        {
                            CampusId = 10,
                            FormulariosAvaliacoesId = 9
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(5938),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Banheiro Com Problema"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7315),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Corrimão da Escada da COINF Descascando"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7319),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Demora para Aprovar Máteria de TCC 1"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7320),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Melhorias no Processo de Atendimento"
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7322),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Pessoal da Limpeza Top"
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7324),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Problemas com o Wifi do Campus"
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7325),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday Top"
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7327),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Semana Academica Divertida"
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7328),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Semana Academica Algumas Palestras Massantes"
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7330),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF precisão limpar o filtro do Ar"
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7332),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes com acustica prejudicada"
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7334),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Nenhum Livro de Loiane Groner"
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(7335),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Livro de Cálculo com página rasurada"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3935),
                            Nome = "IFS-Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4690),
                            Nome = "IFS-Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4693),
                            Nome = "IFS-Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4694),
                            Nome = "IFS-Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4696),
                            Nome = "IFS-Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4697),
                            Nome = "IFS-Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4698),
                            Nome = "IFS-Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4700),
                            Nome = "IFS-Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4701),
                            Nome = "IFS-Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4702),
                            Nome = "IFS-Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(4704),
                            Nome = "IFS-Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(5636),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(5655),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(5657),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(5658),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(5662),
                            Nome = "Laboratórios"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 978, DateTimeKind.Utc).AddTicks(5663),
                            Nome = "Biblioteca"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(3258),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(4510),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(4515),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(4516),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(4518),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(4520),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(4521),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(4522),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(4524),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 969, DateTimeKind.Utc).AddTicks(4525),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FormularioAvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("FormularioAvaliacaoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("784708a8-a4de-422c-95a4-b40c597c0c09"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(2509),
                            FormularioAvaliacaoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("1feeec4f-e8c3-4e87-909d-2a5f96b677b4"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3833),
                            FormularioAvaliacaoId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("cf305cb2-83f7-440d-9ba2-61c9483f113b"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3838),
                            FormularioAvaliacaoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("2586f0b0-1905-41f2-9b88-81c67c59cfc6"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3841),
                            FormularioAvaliacaoId = 4,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("3886a03e-7da8-4f6f-9a8f-b4ff12864ed9"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3843),
                            FormularioAvaliacaoId = 5,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("9742e4e3-abed-46a6-87c0-d1e92a067caf"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3845),
                            FormularioAvaliacaoId = 6,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("776d421c-a912-4d2e-a0df-2c6c48e8a396"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3848),
                            FormularioAvaliacaoId = 7,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 2,
                            Codigo = new Guid("5fbde759-d455-49b5-9da1-11053f43e28f"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3863),
                            FormularioAvaliacaoId = 8,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 5,
                            Codigo = new Guid("714fc138-f109-44dd-b34d-f008cfbe481f"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3865),
                            FormularioAvaliacaoId = 9,
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 8,
                            Codigo = new Guid("3415c464-af69-4be5-93d1-bdd06a226746"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3867),
                            FormularioAvaliacaoId = 10,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 4,
                            Codigo = new Guid("631ff3cf-ed9e-49f6-a79a-8c628307f27c"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3870),
                            FormularioAvaliacaoId = 11,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 2,
                            Codigo = new Guid("a081a6f6-2903-44cc-ad10-a928d4d1f19e"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3872),
                            FormularioAvaliacaoId = 13,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 8,
                            Codigo = new Guid("14ea4926-107e-40ff-99ab-d04e6dce3082"),
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(3874),
                            FormularioAvaliacaoId = 12,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("QuantidadeEstrelas")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("FormulariosAvaliacaos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(5205),
                            Descricao = "Banheiro com problema espelho quebrado",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Banheiro com problema"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6381),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Problema no corrimão"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6385),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Dificuldade com TCC"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6386),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de Melhoria"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6388),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao pessoal da limpeza"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6389),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            QuantidadeEstrelas = 4m,
                            Titulo = "Problemas com WIFI"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6391),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao Techday"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6392),
                            Descricao = "Semana Academica Divertida - Evento top",
                            QuantidadeEstrelas = 4.50m,
                            Titulo = "Elogio ao evento"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6394),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Palestras cansativas na SEMAC"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6395),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Problema com Ar"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6397),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Barulho no lab de redes"
                        },
                        new
                        {
                            Id = 12,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6398),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de bibliográfia"
                        },
                        new
                        {
                            Id = 13,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(6399),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Rasuras no livro"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(4133),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(5167),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(5176),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(5178),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(5179),
                            FeedbackId = 3,
                            Resposta = "Que bom que está gostando, aproveite",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(5180),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 979, DateTimeKind.Utc).AddTicks(5182),
                            FeedbackId = 8,
                            Resposta = "Obrigado pelo seu feedback",
                            Status = true,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(569),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(2081),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(2473),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "123789745",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3730),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "12565735",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3734),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "145",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3735),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "123145",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3737),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "12312345",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3738),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "123452139",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3740),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "12367645",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3741),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "124356345",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3742),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "12346545745",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 7, 24, 19, 37, 36, 971, DateTimeKind.Utc).AddTicks(3743),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "123454645",
                            Status = true
                        });
                });

            modelBuilder.Entity("CampusFormularioAvaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", null)
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.FormularioAvaliacao", null)
                        .WithMany()
                        .HasForeignKey("FormulariosAvaliacoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.FormularioAvaliacao", "FormularioAvaliacao")
                        .WithOne("Feedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.Feedback", "FormularioAvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("FormularioAvaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Navigation("Feedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
