// <auto-generated />
using System;
using IfeedsApi.Core.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210905025109_MigrationsV15-RemovidoAdmin-Feedbacks")]
    partial class MigrationsV15RemovidoAdminFeedbacks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(5970),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Banheiro"
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8440),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Escada COINF"
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8440),
                            MediaAvaliacao = 2.5m,
                            Titulo = "COINF"
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8450),
                            MediaAvaliacao = 3.0m,
                            Titulo = "GEN"
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8450),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Limpeza"
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 1,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8460),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Biblioteca"
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8460),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday"
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8460),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Semana Acadêmica"
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8460),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Ifs Dev Conf"
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8460),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF"
                        },
                        new
                        {
                            Id = 11,
                            CampusId = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8470),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes"
                        },
                        new
                        {
                            Id = 12,
                            CampusId = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8470),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Refeitório"
                        },
                        new
                        {
                            Id = 13,
                            CampusId = 6,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(8470),
                            MediaAvaliacao = 0.0m,
                            Titulo = "Quadra Poliesportiva"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(900),
                            Nome = "Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4070),
                            Nome = "Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4080),
                            Nome = "Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4080),
                            Nome = "Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4080),
                            Nome = "Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4080),
                            Nome = "Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4110),
                            Nome = "Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4690),
                            Nome = "Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4690),
                            Nome = "Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4700),
                            Nome = "Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(4700),
                            Nome = "Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(5160),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(5160),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(5160),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(5170),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(5170),
                            Nome = "Laboratórios"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(7230),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(8820),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(8830),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(8830),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(8830),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(8830),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(8830),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(8830),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(8830),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 568, DateTimeKind.Utc).AddTicks(8840),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(5,1)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("8db557f1-af52-4e45-8523-162782267e91"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 137, DateTimeKind.Utc).AddTicks(9480),
                            Descricao = "Banheiro com problema espelho quebrado",
                            Nota = 3.50m,
                            Status = true,
                            Titulo = "Banheiro com problema",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("a11914ca-9259-4ef0-8faf-e8a1c80c5b94"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2340),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            Nota = 3m,
                            Status = true,
                            Titulo = "Problema no corrimão",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("6ab02c4d-d929-4707-8b72-9eeecc803174"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2400),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            Nota = 2.50m,
                            Status = true,
                            Titulo = "Dificuldade com TCC",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("38fe2666-781d-4b53-b76b-638ffa8a5f7c"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2400),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            Nota = 3m,
                            Status = true,
                            Titulo = "Sugestão de Melhoria",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("9c7e23cd-aaf0-482e-9707-6366f638f996"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2410),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            Nota = 5m,
                            Status = true,
                            Titulo = "Elogio ao pessoal da limpeza",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("0ef23f60-4d05-4dca-8510-e7b0e0023704"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2410),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            Nota = 4m,
                            Status = true,
                            Titulo = "Problemas com WIFI",
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("aea5639c-52b1-4529-8f3a-96512973977c"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2410),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            Nota = 5m,
                            Status = false,
                            Titulo = "Elogio ao Techday",
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 8,
                            Codigo = new Guid("a4a89c45-b3ee-473e-9779-e03f6eb22db7"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2420),
                            Descricao = "Semana Academica Divertida - Evento top",
                            Nota = 4.50m,
                            Status = true,
                            Titulo = "Elogio ao evento",
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 8,
                            Codigo = new Guid("c1b60905-02d3-4575-b3e2-130980ccae75"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2420),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            Nota = 2.50m,
                            Status = false,
                            Titulo = "Palestras cansativas na SEMAC",
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 10,
                            Codigo = new Guid("e3b7b936-4ba5-4105-acbf-09d46d46034d"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2430),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            Nota = 3.50m,
                            Status = false,
                            Titulo = "Problema com Ar",
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 11,
                            Codigo = new Guid("59f4d0b6-dfdc-4b9c-8d3f-687403090f7d"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2430),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            Nota = 2.50m,
                            Status = false,
                            Titulo = "Barulho no lab de redes",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 6,
                            Codigo = new Guid("3c7a5336-294e-459f-abf9-97609bf624c9"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2430),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            Nota = 3m,
                            Status = false,
                            Titulo = "Sugestão de bibliográfia",
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 6,
                            Codigo = new Guid("020e6a6d-138a-4f12-8906-fca5bc27cc54"),
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(2440),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            Nota = 3m,
                            Status = false,
                            Titulo = "Rasuras no livro",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(3050),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(5090),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(5090),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(5100),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(5100),
                            FeedbackId = 3,
                            Resposta = "Obrigado pelo seu feedback, iremos resolver",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(5100),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 138, DateTimeKind.Utc).AddTicks(5100),
                            FeedbackId = 8,
                            Resposta = "Que bom que está gostando, aproveite",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 571, DateTimeKind.Utc).AddTicks(1350),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 571, DateTimeKind.Utc).AddTicks(2650),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("CampusId");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CampusId = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 5, 847, DateTimeKind.Utc).AddTicks(4270),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "$2a$11$isRAErgDcZpiFBPJkS2Oh.DdcXAxZDY0mwrZcZs9OXC/MeoMnjIV2",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            CampusId = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 6, 136, DateTimeKind.Utc).AddTicks(2790),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "$2a$11$jJzH5QjEWEAJ/iDUPIvnN.7EdvzMs76/tPaDXLOfYQhyHT/8DYxM2",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            CampusId = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 6, 397, DateTimeKind.Utc).AddTicks(8000),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "$2a$11$46uQBkpBRpfXrf9HwKH8Jeb4AOO1ZQP3Z2R0W4f6kr6ENz0vrUGS6",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            CampusId = 1,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 6, 638, DateTimeKind.Utc).AddTicks(3930),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "$2a$11$20.GOk243mDC3ufuDESPMueCUCMC4oCtbBVZX4WqCcTNuXyuni3Eq",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            CampusId = 6,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 6, 898, DateTimeKind.Utc).AddTicks(2330),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "$2a$11$cYw/lexGbtL16dsV3KVrG.K.xeUnu9LcijnCRLKQWrhVOfOCs5INm",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            CampusId = 7,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 7, 172, DateTimeKind.Utc).AddTicks(460),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "$2a$11$/4b1JVsl22/QM6ZDd2s.S.1KmAQwJdVCYpYPk1M7G/DAVx/AVbGQa",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            CampusId = 4,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 7, 417, DateTimeKind.Utc).AddTicks(3170),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "$2a$11$eh4.kbePrKb45mk/9ocqsun6AXetezqzi2ayaeVzu9hFvqmw3sB/i",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            CampusId = 2,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 7, 654, DateTimeKind.Utc).AddTicks(4680),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "$2a$11$lPa3cfgLkek/0DzN.GWTIOHg4XCu9CPE/vGiCoTtwnSjSTxRGTTqu",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            CampusId = 4,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 7, 891, DateTimeKind.Utc).AddTicks(3570),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "$2a$11$rT4S0497LN2Z8Ak/KDGFKesq4HAVLy6Nz9nFkR3ZzS5JoQK.rwzmO",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            CampusId = 1,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 9, 5, 2, 51, 8, 136, DateTimeKind.Utc).AddTicks(9560),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "$2a$11$8Zvw7FuHp1jVL0vVzf0JJ.d04peWEpoG1JMHVXFJ9Qd45Jp7eIu4W",
                            Status = true
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", "Campus")
                        .WithMany("Usuarios")
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campus");

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
