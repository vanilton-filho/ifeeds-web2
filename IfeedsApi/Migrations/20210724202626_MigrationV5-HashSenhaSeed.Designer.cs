// <auto-generated />
using System;
using IfeedsApi.Config.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IfeedsApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210724202626_MigrationV5-HashSenhaSeed")]
    partial class MigrationV5HashSenhaSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("CampusFormularioAvaliacao", b =>
                {
                    b.Property<int>("CampusId")
                        .HasColumnType("int");

                    b.Property<int>("FormulariosAvaliacoesId")
                        .HasColumnType("int");

                    b.HasKey("CampusId", "FormulariosAvaliacoesId");

                    b.HasIndex("FormulariosAvaliacoesId");

                    b.ToTable("CampusFormularioAvaliacao");

                    b.HasData(
                        new
                        {
                            CampusId = 1,
                            FormulariosAvaliacoesId = 1
                        },
                        new
                        {
                            CampusId = 2,
                            FormulariosAvaliacoesId = 2
                        },
                        new
                        {
                            CampusId = 3,
                            FormulariosAvaliacoesId = 4
                        },
                        new
                        {
                            CampusId = 4,
                            FormulariosAvaliacoesId = 3
                        },
                        new
                        {
                            CampusId = 5,
                            FormulariosAvaliacoesId = 5
                        },
                        new
                        {
                            CampusId = 6,
                            FormulariosAvaliacoesId = 7
                        },
                        new
                        {
                            CampusId = 7,
                            FormulariosAvaliacoesId = 6
                        },
                        new
                        {
                            CampusId = 8,
                            FormulariosAvaliacoesId = 8
                        },
                        new
                        {
                            CampusId = 9,
                            FormulariosAvaliacoesId = 10
                        },
                        new
                        {
                            CampusId = 10,
                            FormulariosAvaliacoesId = 9
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MediaAvaliacao")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(4466),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Banheiro Com Problema"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5871),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Corrimão da Escada da COINF Descascando"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5875),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Demora para Aprovar Máteria de TCC 1"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5877),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Melhorias no Processo de Atendimento"
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5879),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Pessoal da Limpeza Top"
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5881),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Problemas com o Wifi do Campus"
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5883),
                            MediaAvaliacao = 5.0m,
                            Titulo = "Ifs Techday Top"
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5884),
                            MediaAvaliacao = 4.5m,
                            Titulo = "Semana Academica Divertida"
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5886),
                            MediaAvaliacao = 3.0m,
                            Titulo = "Semana Academica Algumas Palestras Massantes"
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5888),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Lab da COINF precisão limpar o filtro do Ar"
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5890),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Lab de Redes com acustica prejudicada"
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5892),
                            MediaAvaliacao = 2.5m,
                            Titulo = "Nenhum Livro de Loiane Groner"
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(5894),
                            MediaAvaliacao = 3.5m,
                            Titulo = "Livro de Cálculo com página rasurada"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Campus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(2140),
                            Nome = "IFS-Campus Lagarto"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(3869),
                            Nome = "IFS-Campus Glória"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(3875),
                            Nome = "IFS-Campus Estância"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(3878),
                            Nome = "IFS-Campus São Cristovão"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(3879),
                            Nome = "IFS-Campus Itabaiana"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(3881),
                            Nome = "IFS-Campus Aracaju"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(4003),
                            Nome = "IFS-Campus Tobias Barreto"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(4005),
                            Nome = "IFS-Campus Poço Redondo"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(4007),
                            Nome = "IFS-Campus Propriá"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(4008),
                            Nome = "IFS-Campus Socorro"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(4010),
                            Nome = "IFS-Educação a Distancia"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(4111),
                            Nome = "Infraestrutura"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(4132),
                            Nome = "Coordenação"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(4134),
                            Nome = "Serviços"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(4136),
                            Nome = "Eventos"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(4137),
                            Nome = "Laboratórios"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 889, DateTimeKind.Utc).AddTicks(4158),
                            Nome = "Biblioteca"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contatos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(1551),
                            Email = "cicrano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(3017),
                            Email = "fulano@email.com",
                            Telefone = "79999999999"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(3025),
                            Email = "maria@email.com",
                            Telefone = "71999999999"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(3028),
                            Email = "jose@email.com",
                            Telefone = "7199944444"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(3030),
                            Email = "joao@email.com",
                            Telefone = "7199933333"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(3031),
                            Email = "carlos@email.com",
                            Telefone = "71999995555"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(3033),
                            Email = "rafaela@email.com",
                            Telefone = "7199999999999"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(3035),
                            Email = "kaiki@email.com",
                            Telefone = "71999666666"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(3036),
                            Email = "vanilton@email.com",
                            Telefone = "71999977777"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 954, DateTimeKind.Utc).AddTicks(3038),
                            Email = "chico@email.com",
                            Telefone = "71999998888"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<Guid>("Codigo")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FormularioAvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("FormularioAvaliacaoId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvaliacaoId = 1,
                            Codigo = new Guid("3891b54b-256c-453a-87b6-1a41a7652f41"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(3861),
                            FormularioAvaliacaoId = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            AvaliacaoId = 2,
                            Codigo = new Guid("556a9dd1-6100-4350-a187-16fd57014695"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5754),
                            FormularioAvaliacaoId = 2,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvaliacaoId = 3,
                            Codigo = new Guid("9f3008af-98f5-4747-b581-533e796d3a8e"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5763),
                            FormularioAvaliacaoId = 3,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 4,
                            AvaliacaoId = 4,
                            Codigo = new Guid("a896b911-3255-44fd-bd2d-2538c13140b1"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5766),
                            FormularioAvaliacaoId = 4,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            AvaliacaoId = 5,
                            Codigo = new Guid("f36f3355-d34f-4993-a414-f8d5857a5fbd"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5769),
                            FormularioAvaliacaoId = 5,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 6,
                            AvaliacaoId = 6,
                            Codigo = new Guid("9ea0a1a4-a640-410a-92eb-5e44d10faae1"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5788),
                            FormularioAvaliacaoId = 6,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 7,
                            AvaliacaoId = 7,
                            Codigo = new Guid("596d1995-f379-459a-9cb9-da3802c7f9ae"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5790),
                            FormularioAvaliacaoId = 7,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 8,
                            AvaliacaoId = 2,
                            Codigo = new Guid("1c701885-61c0-4fb5-bb23-52fd9c0fd916"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5793),
                            FormularioAvaliacaoId = 8,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 9,
                            AvaliacaoId = 5,
                            Codigo = new Guid("a9d8864d-5217-4753-a0c4-6b688e6f6b96"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5795),
                            FormularioAvaliacaoId = 9,
                            UsuarioId = 10
                        },
                        new
                        {
                            Id = 10,
                            AvaliacaoId = 8,
                            Codigo = new Guid("2bbc4a08-5073-45c7-a206-4798e7b96952"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5797),
                            FormularioAvaliacaoId = 10,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 11,
                            AvaliacaoId = 4,
                            Codigo = new Guid("33ce240d-1fca-494f-84db-1b1a62885941"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5799),
                            FormularioAvaliacaoId = 11,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 12,
                            AvaliacaoId = 2,
                            Codigo = new Guid("b0f3999b-2449-406a-b1dc-f95c5b47d79f"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5802),
                            FormularioAvaliacaoId = 13,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 13,
                            AvaliacaoId = 8,
                            Codigo = new Guid("a6501348-7b63-4996-babe-8a255a5589be"),
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(5805),
                            FormularioAvaliacaoId = 12,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("QuantidadeEstrelas")
                        .HasColumnType("decimal(5,1)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("FormulariosAvaliacaos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(5054),
                            Descricao = "Banheiro com problema espelho quebrado",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Banheiro com problema"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6610),
                            Descricao = "Corrimão da Escada da COINF Descascando. Me cortei",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Problema no corrimão"
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6618),
                            Descricao = "Demora para Aprovar Máteria de TCC 1 - Estou com mais de um mes aguardando aprovação",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Dificuldade com TCC"
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6620),
                            Descricao = "Melhorias no Processo de Atendimento -  Deveriam automatizar mais os processos",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de Melhoria"
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6623),
                            Descricao = "Pessoal da Limpeza Top - Campus sempre muito bem conservado",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao pessoal da limpeza"
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6625),
                            Descricao = "Problemas com o Wifi do Campus - Internet lenta o que dificulta o acesso",
                            QuantidadeEstrelas = 4m,
                            Titulo = "Problemas com WIFI"
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6627),
                            Descricao = "Ifs Techday Top - Evento maravilhoso",
                            QuantidadeEstrelas = 5m,
                            Titulo = "Elogio ao Techday"
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6630),
                            Descricao = "Semana Academica Divertida - Evento top",
                            QuantidadeEstrelas = 4.50m,
                            Titulo = "Elogio ao evento"
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6641),
                            Descricao = "Semana Academica Algumas Palestras Massantes - palestras muito longas e cansativas",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Palestras cansativas na SEMAC"
                        },
                        new
                        {
                            Id = 10,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6642),
                            Descricao = "Lab da COINF precisão limpar o filtro do Ar - nunca funciona corretamente",
                            QuantidadeEstrelas = 3.50m,
                            Titulo = "Problema com Ar"
                        },
                        new
                        {
                            Id = 11,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6644),
                            Descricao = "Lab de Redes com acustica prejudicada - Barulho da oficina atrapalha a aula",
                            QuantidadeEstrelas = 2.50m,
                            Titulo = "Barulho no lab de redes"
                        },
                        new
                        {
                            Id = 12,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6646),
                            Descricao = "Nenhum Livro de Loiane Groner - acervos desatualizados",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Sugestão de bibliográfia"
                        },
                        new
                        {
                            Id = 13,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(6647),
                            Descricao = "Livro de Cálculo com página rasurada - o livro está com rasuras",
                            QuantidadeEstrelas = 3m,
                            Titulo = "Rasuras no livro"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FeedbackId")
                        .HasColumnType("int");

                    b.Property<string>("Resposta")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeedbackId")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("RespostasFeedbacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(6214),
                            FeedbackId = 2,
                            Resposta = "Obrigado, iremos resolver",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(7857),
                            FeedbackId = 5,
                            Resposta = "Obrigado, Sim, eles são maravilhosos",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(7862),
                            FeedbackId = 4,
                            Resposta = "Resolução esta em andamento",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(7864),
                            FeedbackId = 1,
                            Resposta = "Oh, não estavamos cientes dessa situação",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(7865),
                            FeedbackId = 3,
                            Resposta = "Que bom que está gostando, aproveite",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(7866),
                            FeedbackId = 6,
                            Resposta = "Repassando para os resposáveis",
                            Status = true,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 890, DateTimeKind.Utc).AddTicks(7868),
                            FeedbackId = 8,
                            Resposta = "Obrigado pelo seu feedback",
                            Status = true,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 955, DateTimeKind.Utc).AddTicks(8745),
                            Tipo = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 21, 955, DateTimeKind.Utc).AddTicks(9848),
                            Tipo = "USER"
                        });
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("varchar(280)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId")
                        .IsUnique();

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContatoId = 1,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 22, 249, DateTimeKind.Utc).AddTicks(2630),
                            Matricula = "20211897238",
                            Nome = "Cicrano",
                            RoleId = 1,
                            Senha = "$2a$11$.JdbsVVpQyQ4gGpEGdWhBuQ3C/.gWm8pH/36ZI32nmDi7LMjOj7x2",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            ContatoId = 2,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 22, 537, DateTimeKind.Utc).AddTicks(4770),
                            Matricula = "21203554",
                            Nome = "Fulano",
                            RoleId = 2,
                            Senha = "$2a$11$az9udGBUJp1tqQ1odqfaAuOh44Lpq4.T7NJwDnSZwgRVFixZIsnPu",
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            ContatoId = 3,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 22, 814, DateTimeKind.Utc).AddTicks(7924),
                            Matricula = "20215888854",
                            Nome = "Maria",
                            RoleId = 2,
                            Senha = "$2a$11$XBzGGCVzdQzhbApqJmjTa.qaTvr5pG8XO1s21JVCpB0muessrIVM2",
                            Status = true
                        },
                        new
                        {
                            Id = 4,
                            ContatoId = 4,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 23, 90, DateTimeKind.Utc).AddTicks(4538),
                            Matricula = "2021777554",
                            Nome = "Jose",
                            RoleId = 2,
                            Senha = "$2a$11$yXo3BjqsH7x2zxabbVPnweZP6WCiQ0TAiT9lKmRj5TlbS9qK8VT7y",
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            ContatoId = 5,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 23, 407, DateTimeKind.Utc).AddTicks(9200),
                            Matricula = "2021533554",
                            Nome = "Joao",
                            RoleId = 2,
                            Senha = "$2a$11$ASLUUrYHqqTNC6MQQk4i0utjdWNzZdKZSAroJmazqRUoGX1m0P4vW",
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            ContatoId = 6,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 23, 709, DateTimeKind.Utc).AddTicks(5045),
                            Matricula = "20215554",
                            Nome = "Carlos",
                            RoleId = 2,
                            Senha = "$2a$11$ij6VsWZw0sK7uorkVvErA.A4hD8HG0CxZUJn/qMAodi81bWv7Vvqy",
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            ContatoId = 7,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 40, DateTimeKind.Utc).AddTicks(88),
                            Matricula = "20213554",
                            Nome = "Rafaela",
                            RoleId = 2,
                            Senha = "$2a$11$OwwHPGF.xqP3nCVf8ABcG.rYEVUyqXyNdEIEX86c67bg0W0LsgZSS",
                            Status = true
                        },
                        new
                        {
                            Id = 8,
                            ContatoId = 8,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 323, DateTimeKind.Utc).AddTicks(6082),
                            Matricula = "202156954",
                            Nome = "Kaiki",
                            RoleId = 2,
                            Senha = "$2a$11$Q8XciZHy9PtHvIsfUo3tyOi91feZRlvbZUJvxLFgIOtyPMelybqvK",
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            ContatoId = 9,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 601, DateTimeKind.Utc).AddTicks(5004),
                            Matricula = "20266654",
                            Nome = "Vanilton",
                            RoleId = 2,
                            Senha = "$2a$11$RvvZdxCean8U7rRoMfEOleBxH5N/WrTrf7lY3o8ZbgJH03x9.L.AG",
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            ContatoId = 10,
                            DataCriacao = new DateTime(2021, 7, 24, 20, 26, 24, 882, DateTimeKind.Utc).AddTicks(1178),
                            Matricula = "2021585641",
                            Nome = "Chico",
                            RoleId = 2,
                            Senha = "$2a$11$rG8uyO4xrTvPFggZtzgcN.1MuXMeb/MRvJdoKG6AgPaQmV7sBFDUi",
                            Status = true
                        });
                });

            modelBuilder.Entity("CampusFormularioAvaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Campus", null)
                        .WithMany()
                        .HasForeignKey("CampusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.FormularioAvaliacao", null)
                        .WithMany()
                        .HasForeignKey("FormulariosAvaliacoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Categoria", "Categoria")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Avaliacao", "Avaliacao")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.FormularioAvaliacao", "FormularioAvaliacao")
                        .WithOne("Feedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.Feedback", "FormularioAvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacao");

                    b.Navigation("FormularioAvaliacao");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.RespostaFeedback", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Feedback", "Feedback")
                        .WithOne("RespostasFeedback")
                        .HasForeignKey("IfeedsApi.Domain.Models.RespostaFeedback", "FeedbackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Usuario", "Usuario")
                        .WithMany("RespostasFeedback")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feedback");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.HasOne("IfeedsApi.Domain.Models.Contato", "Contato")
                        .WithOne("Usuario")
                        .HasForeignKey("IfeedsApi.Domain.Models.Usuario", "ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IfeedsApi.Domain.Models.Role", "Role")
                        .WithMany("Usuario")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contato");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Avaliacao", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Categoria", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Contato", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Feedback", b =>
                {
                    b.Navigation("RespostasFeedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.FormularioAvaliacao", b =>
                {
                    b.Navigation("Feedback");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Role", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("IfeedsApi.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RespostasFeedback");
                });
#pragma warning restore 612, 618
        }
    }
}
